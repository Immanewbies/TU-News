name: Test 
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm start & npm test
      - run: mkdir docker
      - run: cd docker
      - run: touch setup.sh
      - run: echo '#!/bin/sh' >> setup.sh
      - run: echo 'yum install git -y' >> setup.sh
      - run: echo 'yum install gcc-c++ make -y' >> setup.sh
      - run: echo 'curl -sL https://rpm.nodesource.com/setup_16.x | bash' >> setup.sh
      - run: echo 'yum install nodejs -y' >> setup.sh
      - run: echo 'git clone https://github.com/Immanewbies/TU-News   ' >> setup.sh
      - run: echo 'cd TU-News' >> setup.sh
      - run: echo 'npm ci' >> setup.sh
      - run: echo 'yum -y update' >> setup.sh
      - run: echo 'npm start' >> setup.sh
      - run: touch Dockerfile
      - run: echo 'FROM amazonlinux' >> Dockerfile
      - run: echo 'EXPOSE 3000' >> Dockerfile
      - run: echo 'COPY setup.sh /' >> Dockerfile
      - run: echo 'RUN chmod 705 ./setup.sh' >> Dockerfile
      - run: echo 'CMD ["./setup.sh"]' >> Dockerfile
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: docker image build -t ${{ secrets.DOCKERHUB_USERNAME }}/tunews:latest .
      - run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/tunews:latest
      
      
